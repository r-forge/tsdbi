#!/bin/sh

# This script starts a simple.server as a background process using $1 as the  
#   dbase directory.
# NOTE $1 should be a fully qualified path to the directory !!!

# The pid of the server is returned. The pid should be
#   passed to cleanup.simple.server to terminate the server.

if [ $# -ne 1 ]; then
  echo usage:
  echo "  simple.server /path/to/db/directory"
  exit
fi 


server=`uname -n`
log=simple.server.log.$$

# Check that another server is not running

running=`$PADI/check.server $server`
if [ "$running" = "RUNNING" ]; then
  echo Another PADI server is running on this machine.
  exit 1
fi

# rm -f simple.server.log
# Note re-direction of standard IO seems necessary here in order for the
#  process to return control of IO to this script so it can exit.
#padi_simple_svc $1 -l /dev/null  </dev/null >/dev/null &
 $PADI/padi_simple_svc $1 -l $log  </dev/null >$log  2>&1 &
serverpid=$!
# don't exit too quickly or a client application may try to use the server
# before it is registered.
sleep 5
echo $serverpid
